import { Component, OnInit } from '@angular/core';
import { MatSnackBar } from '@angular/material';
import { UserServiceService } from 'src/app/services/user-service.service';
import { Validators, FormControl } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';


@Component({
  selector: 'app-reset',
  templateUrl: './reset.component.html',
  styleUrls: ['./reset.component.scss']
})
export class ResetComponent implements OnInit {
  constructor(private userService: UserServiceService, private snackBar: MatSnackBar, private activeRoute: ActivatedRoute) { }
  access_token = this.activeRoute.snapshot.paramMap.get('access_token')
  data: any;
  model: any;

  password = new FormControl('', [Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&].{8,}')])
  ngOnInit() {
    console.log("token", this.access_token);
    localStorage.setItem('access_token', this.access_token)
  }
  getPassError() {
    return this.password.hasError('required') ? 'password cannot be empty' :
      this.password.hasError('pattern') ? 'invalid password' : ''
  }
  next() {
    this.model = {
      password: this.password.value,
    }
    console.log("data", this.model);

    this.userService.login(this.model).subscribe(
      (response: any) => {
        // console.log("ffgfggg=>", response);
        console.log("reset", this.data)
        this.snackBar.open('Reset successfully', 'End Now', { duration: 3000 })
      },
      error => {
        console.log(error)
        this.snackBar.open('Enter proper password', 'End Now', { duration: 3000 })
      }


    )


  }


}
